name: CI

on:
  push:
    branches:
      - "*"
    tags:
      - v*

jobs:
  check-code-format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install dev tools
        run: |
          pip install --no-cache -e .[dev]

      - name: Check code format with Black
        run: |
          black --check open_dubbing/ tests/

      - name: Check code style with Flake8
        if: ${{ always() }}
        run: |
          flake8 open_dubbing/ tests/

      - name: Check code with isort
        if: ${{ always() }}
        run: |
          isort --check-only open_dubbing/ tests/

  run-tests:
    environment: CI/CD
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
         os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install -y ffmpeg espeak-ng
        pip install .
        pip install pytest
        pip cache purge
        sudo apt-get clean

    - name: Install dependencies on macOS
      if: matrix.os == 'macos-latest'
      run: |
        sysctl -n machdep.cpu.brand_string
        brew update
        brew install ffmpeg espeak-ng
        pip install .
        pip install pytest
        pip cache purge

    - name: Run Unit tests
      run: |
        make run-tests

    - name: Run end-to-end test
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        make run-e2e-tests

  build-and-push-package:
    environment: CI/CD
    runs-on: ubuntu-latest
    needs: [check-code-format, run-tests]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.15

      - name: Install dependencies
        run: |
          pip install wheel twine

      - name: Build package
        run: |
          python3 setup.py sdist bdist_wheel

      - name: Push package on PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          make publish-release
